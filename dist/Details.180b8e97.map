{"version":3,"sources":["Carousel.js","Details.js"],"names":["Carousel","state","photos","active","handleIndexClick","event","setState","target","dataset","index","value","map","photo","media","filter","React","Component","petfinder","key","secret","LoadableModalContent","loader","loading","Details","showModal","toggleModal","pet","get","output","id","props","then","data","breed","Array","isArray","breeds","join","name","animal","location","contact","city","description","catch"],"mappings":"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","file":"Details.180b8e97.map","sourceRoot":"../src","sourcesContent":["import React from \"react\";\n\nclass Carousel extends React.Component {\n  state = {\n    photos: [],\n    active: 0\n  };\n\n  static getDerivedStateFromProps({ media }) {\n    let photos = [];\n\n    if (media && media.photos && media.photos.photo) {\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\n    }\n\n    return { photos };\n  }\n\n  handleIndexClick = event => {\n    this.setState({\n      active: +event.target.dataset.index\n    });\n  };\n\n  render() {\n    const { photos, active } = this.state;\n    return (\n      <div className=\"carousel\">\n        <img src={photos[active].value} alt=\"primary animal\" />\n        <div className=\"carousel-smaller\">\n          {photos.map((photo, index) => (\n            /* ideally have an image in a button with the button having the click event*/\n            /* eslint-disable-next-line */\n            <img\n              onClick={this.handleIndexClick}\n              key={photo.value}\n              data-index={index}\n              src={photo.value}\n              className={index === active ? \"active\" : \"\"}\n              alt=\"animal thumbnail\"\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from \"react\";\nimport pf from \"petfinder-client\";\nimport Loadable from \"react-loadable\";\nimport { navigate } from \"@reach/router\";\nimport Carousel from \"./Carousel\";\n\nconst petfinder = pf({\n  key: process.env.API_KEY,\n  secret: process.env.API_SECRET\n});\n\nconst LoadableModalContent = Loadable({\n  loader: () => import(\"./AdoptModalContent\"),\n  loading() {\n    return <p>Loading Modal...</p>;\n  }\n});\n\nclass Details extends React.Component {\n  state = {\n    loading: true,\n    showModal: false\n  };\n\n  toggleModal = () => this.setState({ showModal: !this.state.showModal });\n\n  componentDidMount() {\n    petfinder.pet\n      .get({\n        output: \"full\",\n        id: this.props.id\n      })\n      .then(data => {\n        const pet = data.petfinder.pet;\n        let breed;\n\n        if (Array.isArray(data.petfinder.pet.breeds.breed)) {\n          breed = pet.breeds.breed.join(\", \");\n        } else {\n          breed = pet.breeds.breed;\n        }\n\n        this.setState({\n          name: pet.name,\n          breed,\n          animal: pet.animal,\n          location: `${pet.contact.city}, ${pet.contact.state}`,\n          description: pet.description,\n          media: pet.media,\n          loading: false\n        });\n      })\n      .catch(() => {\n        navigate(\"/\");\n      });\n  }\n  render() {\n    if (this.state.loading) {\n      return <h1>Current loading...</h1>;\n    }\n\n    const {\n      name,\n      animal,\n      breed,\n      location,\n      description,\n      media,\n      showModal\n    } = this.state;\n\n    return (\n      <div className=\"details\">\n        <Carousel media={media} />\n        <div>\n          <h1>{name}</h1>\n          <h2>\n            {animal} - {breed} - {location}\n          </h2>\n          <button onClick={this.toggleModal}>Adopt {name}</button>\n          <p>{description}</p>\n          {showModal ? (\n            <LoadableModalContent toggleModal={this.toggleModal} name={name} />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Details;\n"]}
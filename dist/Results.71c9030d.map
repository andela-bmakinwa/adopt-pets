{"version":3,"sources":["Pet.js","Results.js"],"names":["Pet","React","Component","props","name","animal","breed","media","location","id","photos","photo","filter","hero","value","petfinder","key","secret","Results","search","pet","find","output","then","data","pets","Array","isArray","setState","state","map","breeds","join","contact","city","mapStateToProps"],"mappings":"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","file":"Results.71c9030d.map","sourceRoot":"../src","sourcesContent":["import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nclass Pet extends React.Component {\n  render() {\n    const { name, animal, breed, media, location, id } = this.props;\n    let photos = [];\n\n    if (media && media.photos && media.photos.photo) {\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\n    }\n\n    const hero = photos[0] ? photos[0].value : \"http://placecorgi.com/300/300\";\n\n    return (\n      <Link to={`/details/${id}`} className=\"pet\">\n        <div className=\"image-container\">\n          <img src={hero} alt={name} />\n        </div>\n\n        <div className=\"info\">\n          <h1>{name}</h1>\n          <h2>\n            {animal} - {breed} - {location}\n          </h2>\n        </div>\n      </Link>\n    );\n  }\n}\nexport default Pet;\n","import React from \"react\";\nimport pf from \"petfinder-client\";\nimport Pet from \"./Pet\";\nimport SearchBox from \"./SearchBox\";\nimport { connect } from \"react-redux\";\n\nconst petfinder = pf({\n  key: process.env.API_KEY,\n  secret: process.env.API_SECRET\n});\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pets: []\n    };\n  }\n\n  componentDidMount() {\n    this.search();\n  }\n\n  search = () => {\n    petfinder.pet\n      .find({\n        output: \"full\",\n        animal: this.props.animal,\n        breed: this.props.breed,\n        location: this.props.location\n      })\n      .then(data => {\n        let pets;\n\n        if (data.petfinder.pets && data.petfinder.pets.pet) {\n          if (Array.isArray(data.petfinder.pets.pet)) {\n            pets = data.petfinder.pets.pet;\n          } else {\n            pets = [data.petfinder.pets.pet];\n          }\n        } else {\n          pets = [];\n        }\n\n        this.setState({ pets });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"search\">\n        <SearchBox search={this.search} />\n\n        {this.state.pets.map(pet => {\n          let breed;\n\n          if (Array.isArray(pet.breeds.breed)) {\n            breed = pet.breeds.breed.join(\", \");\n          }\n\n          return (\n            <Pet\n              key={pet.id}\n              id={pet.id}\n              animal={pet.animal}\n              name={pet.name}\n              breed={breed}\n              media={pet.media}\n              location={`${pet.contact.city}, ${pet.contact.state}`}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ location, breed, animal }) => ({\n  location,\n  breed,\n  animal\n});\n\nexport default connect(mapStateToProps)(Results);\n"]}